initialize() {
	// print and interpret constants
	catn("Seed == " + getSeed());
	catn("L == " + Lstr);
	catn("OUTFILE == " + OUTFILE);
	catn();
	
	defineConstant("L", asInteger(Lstr));
		
	// look up the expected number of generations to coalescence
	if (L == 1) defineConstant("END", 2054);
	else if (L == 10) defineConstant("END", 2062);
	else if (L == 1e2) defineConstant("END", 1928);
	else if (L == 1e3) defineConstant("END", 1957);
	else if (L == 1e4) defineConstant("END", 2088);
	else if (L == 1e5) defineConstant("END", 2709);
	else if (L == 1e6) defineConstant("END", 4743);
	else if (L == 1e7) defineConstant("END", 7898);
	else if (L == 1e8) defineConstant("END", 10648);
	else if (L == 1e9) defineConstant("END", 13311);
	else if (L == 1e10) defineConstant("END", 15771);
	else stop("unsupported L");
	
	// model initialization
	initializeTreeSeq();
	initializeMutationRate(0);
	initializeMutationType("m1", 0.5, "f", 0.0);
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, L-1);
	initializeRecombinationRate(1e-8);
}
1 {
	sim.addSubpop("p1", 500);
}
1:100000 late() {
	// run for the mean coalescence time
	if (sim.generation == END)
	{
		sim.treeSeqOutput("output/"+OUTFILE);
		sim.simulationFinished();
	}
}
